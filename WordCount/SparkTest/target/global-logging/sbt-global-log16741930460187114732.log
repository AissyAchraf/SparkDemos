[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.6 (Oracle Corporation Java 11.0.17)
[debug] Load.defaultLoad until apply took 378.1548ms
[debug]           Load.loadUnit: plugins took 281.5853ms
[debug]           Load.loadUnit: defsScala took 0.6531ms
[debug] [Loading] Scanning directory C:\Users\session\Desktop\Spark\SparkTest\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\session\Desktop\Spark\SparkTest\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 42.1735 ms
[debug]               Load.resolveProject(sparktest-build) took 122.5124ms
[debug]             Load.loadTransitive: finalizeProject(Project(id sparktest-build, base: C:\Users\session\Desktop\Spark\SparkTest\project, plugins: List(<none>))) took 236.985ms
[debug] [Loading] Done in C:\Users\session\Desktop\Spark\SparkTest\project, returning: (sparktest-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 301.3275ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.6092ms
[debug]         Load.loadUnit(file:/C:/Users/session/Desktop/Spark/SparkTest/project/, ...) took 598.2955ms
[debug]       Load.apply: load took 1056.2946ms
[debug]       Load.apply: resolveProjects took 34.492ms
[debug]       Load.apply: finalTransforms took 162.8786ms
[debug]       Load.apply: config.delegates took 16.2686ms
[debug]       Load.apply: Def.make(settings)... took 1415.1923ms
[debug]       Load.apply: structureIndex took 214.4661ms
[debug]       Load.apply: mkStreams took 8.4729ms
[info] loading project definition from C:\Users\session\Desktop\Spark\SparkTest\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 5596.0075ms
[debug]     Load.loadUnit: defsScala took 0.0143ms
[debug] [Loading] Scanning directory C:\Users\session\Desktop\Spark\SparkTest
[debug]       Load.loadUnit: mkEval took 12.736ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.6138 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 6.3932ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\session\Desktop\Spark\SparkTest, plugins: List(<none>))) took 14.2741ms
[debug] [Loading] Done in C:\Users\session\Desktop\Spark\SparkTest, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 9134.6594ms
[debug]     Load.loadUnit: cleanEvalClasses took 65.5058ms
[debug]   Load.loadUnit(file:/C:/Users/session/Desktop/Spark/SparkTest/, ...) took 14801.1481ms
[debug] Load.apply: load took 14870.9488ms
[debug] Load.apply: resolveProjects took 0.1558ms
[debug] Load.apply: finalTransforms took 37.3261ms
[debug] Load.apply: config.delegates took 1.3845ms
[debug] Load.apply: Def.make(settings)... took 223.6929ms
[debug] Load.apply: structureIndex took 63.0791ms
[debug] Load.apply: mkStreams took 0.0052ms
[info] set current project to SparkTest (in build file:/C:/Users/session/Desktop/Spark/SparkTest/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-a3497edd47a10dcd7027
[debug] Writing bsp connection file
[info] started sbt server
